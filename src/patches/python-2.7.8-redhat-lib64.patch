diff --git i/Lib/distutils/command/install.py w/Lib/distutils/command/install.py
index b9f1c6c..138144b 100644
--- i/Lib/distutils/command/install.py
+++ w/Lib/distutils/command/install.py
@@ -41,15 +41,15 @@ else:

 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'purelib': '$base/lib64/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib64/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
-        'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'purelib': '$base/lib64/python',
+        'platlib': '$base/lib64/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
diff --git i/Lib/distutils/sysconfig.py w/Lib/distutils/sysconfig.py
index 0c726d9..bf17c0f 100644
--- i/Lib/distutils/sysconfig.py
+++ w/Lib/distutils/sysconfig.py
@@ -120,7 +120,7 @@ def get_python_lib(plat_specific=0, standard_lib=0, prefix=None):

     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 "lib64", "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
diff --git i/Lib/site.py w/Lib/site.py
index f1b0ae8..2edfa17 100644
--- i/Lib/site.py
+++ w/Lib/site.py
@@ -288,6 +288,9 @@ def getsitepackages():
         if sys.platform in ('os2emx', 'riscos'):
             sitepackages.append(os.path.join(prefix, "Lib", "site-packages"))
         elif os.sep == '/':
+            sitepackages.append(os.path.join(prefix, "lib64",
+                                        "python" + sys.version[:3],
+                                        "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib",
                                         "python" + sys.version[:3],
                                         "site-packages"))
diff --git i/Lib/sysconfig.py w/Lib/sysconfig.py
index aa69351..4717da9 100644
--- i/Lib/sysconfig.py
+++ w/Lib/sysconfig.py
@@ -7,20 +7,20 @@ from os.path import pardir, realpath

 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
-        'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{base}/lib64/python{py_version_short}',
+        'platstdlib': '{platbase}/lib64/python{py_version_short}',
+        'purelib': '{base}/lib64/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/lib64/python{py_version_short}/site-packages',
         'include': '{base}/include/python{py_version_short}',
         'platinclude': '{platbase}/include/python{py_version_short}',
         'scripts': '{base}/bin',
         'data': '{base}',
         },
     'posix_home': {
-        'stdlib': '{base}/lib/python',
-        'platstdlib': '{base}/lib/python',
-        'purelib': '{base}/lib/python',
-        'platlib': '{base}/lib/python',
+        'stdlib': '{base}/lib64/python',
+        'platstdlib': '{base}/lib64/python',
+        'purelib': '{base}/lib64/python',
+        'platlib': '{base}/lib64/python',
         'include': '{base}/include/python',
         'platinclude': '{base}/include/python',
         'scripts': '{base}/bin',
@@ -47,10 +47,10 @@ _INSTALL_SCHEMES = {
         'data'   : '{base}',
         },
     'os2_home': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
-        'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{userbase}/lib64/python{py_version_short}',
+        'platstdlib': '{userbase}/lib64/python{py_version_short}',
+        'purelib': '{userbase}/lib64/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib64/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data'   : '{userbase}',
@@ -65,19 +65,19 @@ _INSTALL_SCHEMES = {
         'data'   : '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
-        'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{userbase}/lib64/python{py_version_short}',
+        'platstdlib': '{userbase}/lib64/python{py_version_short}',
+        'purelib': '{userbase}/lib64/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib64/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data'   : '{userbase}',
         },
     'osx_framework_user': {
-        'stdlib': '{userbase}/lib/python',
-        'platstdlib': '{userbase}/lib/python',
-        'purelib': '{userbase}/lib/python/site-packages',
-        'platlib': '{userbase}/lib/python/site-packages',
+        'stdlib': '{userbase}/lib64/python',
+        'platstdlib': '{userbase}/lib64/python',
+        'purelib': '{userbase}/lib64/python/site-packages',
+        'platlib': '{userbase}/lib64/python/site-packages',
         'include': '{userbase}/include',
         'scripts': '{userbase}/bin',
         'data'   : '{userbase}',
diff --git i/Lib/test/test_site.py w/Lib/test/test_site.py
index f4b5fc6..c4dee8f 100644
--- i/Lib/test/test_site.py
+++ w/Lib/test/test_site.py
@@ -241,18 +241,23 @@ class HelperFunctionsTests(unittest.TestCase):
             self.assertEqual(dirs[2], wanted)
         elif os.sep == '/':
             # OS X non-framwework builds, Linux, FreeBSD, etc
-            self.assertEqual(len(dirs), 2)
             wanted = os.path.join('xoxo', 'lib', 'python' + sys.version[:3],
+                                   'site-packages')
+            self.assertEquals(len(dirs), 3)
+            wanted = os.path.join('xoxo', 'lib64', 'python' + sys.version[:3],
                                   'site-packages')
-            self.assertEqual(dirs[0], wanted)
+            self.assertEquals(dirs[1], wanted)
+            wanted = os.path.join('xoxo', 'lib', 'python' + sys.version[:3],
+                                  'site-packages')
+            self.assertEqual(dirs[2], wanted)
             wanted = os.path.join('xoxo', 'lib', 'site-python')
-            self.assertEqual(dirs[1], wanted)
+            self.assertEqual(dirs[3], wanted)
         else:
             # other platforms
-            self.assertEqual(len(dirs), 2)
-            self.assertEqual(dirs[0], 'xoxo')
-            wanted = os.path.join('xoxo', 'lib', 'site-packages')
-            self.assertEqual(dirs[1], wanted)
+            self.assertEquals(len(dirs), 2)
+            self.assertEquals(dirs[0], 'xoxo')
+            wanted = os.path.join('xoxo', 'lib64', 'site-packages')
+            self.assertEquals(dirs[1], wanted)

 class PthFile(object):
     """Helper class for handling testing of .pth files"""
diff --git i/Makefile.pre.in w/Makefile.pre.in
index 9d55550..12195d0 100644
--- i/Makefile.pre.in
+++ w/Makefile.pre.in
@@ -106,7 +106,7 @@ LIBDIR=		@libdir@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib64

 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
diff --git i/Modules/Setup.dist w/Modules/Setup.dist
index 2ad1aa3..3874e27 100644
--- i/Modules/Setup.dist
+++ w/Modules/Setup.dist
@@ -418,7 +418,7 @@ GLHACK=-Dclear=__GLclear
 #DB=/usr/local/BerkeleyDB.4.0
 #DBLIBVER=4.0
 #DBINC=$(DB)/include
-#DBLIB=$(DB)/lib
+DBLIB=$(DB)/lib
 #_bsddb _bsddb.c -I$(DBINC) -L$(DBLIB) -ldb-$(DBLIBVER)

 # Historical Berkeley DB 1.85
@@ -464,7 +464,7 @@ GLHACK=-Dclear=__GLclear
 # Andrew Kuchling's zlib module.
 # This require zlib 1.1.3 (or later).
 # See http://www.gzip.org/zlib/
-#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz
+zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib64 -lz

 # Interface to the Expat XML parser
 #
diff --git i/Modules/getpath.c w/Modules/getpath.c
index de96d47..6a36378 100644
--- i/Modules/getpath.c
+++ w/Modules/getpath.c
@@ -51,8 +51,8 @@
  * Modules/Setup.  If the landmark is found, we're done.
  *
  * For the remaining steps, the prefix landmark will always be
- * lib/python$VERSION/os.py and the exec_prefix will always be
- * lib/python$VERSION/lib-dynload, where $VERSION is Python's version
+ * lib64/python$VERSION/os.py and the exec_prefix will always be
+ * lib64/python$VERSION/lib-dynload, where $VERSION is Python's version
  * number as supplied by the Makefile.  Note that this means that no more
  * build directory checking is performed; if the first step did not find
  * the landmarks, the assumption is that python is running from an
@@ -82,7 +82,7 @@
  * containing the shared library modules is appended.  The environment
  * variable $PYTHONPATH is inserted in front of it all.  Finally, the
  * prefix and exec_prefix globals are tweaked so they reflect the values
- * expected by other code, by stripping the "lib/python$VERSION/..." stuff
+ * expected by other code, by stripping the "lib64/python$VERSION/..." stuff
  * off.  If either points to the build directory, the globals are reset to
  * the corresponding preprocessor variables (so sys.prefix will reflect the
  * installation location, even though sys.path points into the build
@@ -117,8 +117,8 @@
 #endif

 #ifndef PYTHONPATH
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-              EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/lib64/python" VERSION ":" \
+              EXEC_PREFIX "/lib64/python" VERSION "/lib-dynload"
 #endif

 #ifndef LANDMARK
@@ -129,7 +129,7 @@ static char prefix[MAXPATHLEN+1];
 static char exec_prefix[MAXPATHLEN+1];
 static char progpath[MAXPATHLEN+1];
 static char *module_search_path = NULL;
-static char lib_python[] = "lib/python" VERSION;
+static char lib_python[] = "lib64/python" VERSION;

 static void
 reduce(char *dir)
@@ -543,7 +543,7 @@ calculate_path(void)
     }
     else
         strncpy(zip_path, PREFIX, MAXPATHLEN);
-    joinpath(zip_path, "lib/python00.zip");
+    joinpath(zip_path, "lib64/python00.zip");
     bufsz = strlen(zip_path);   /* Replace "00" with version */
     zip_path[bufsz - 6] = VERSION[0];
     zip_path[bufsz - 5] = VERSION[2];
@@ -553,7 +553,7 @@ calculate_path(void)
             fprintf(stderr,
                 "Could not find platform dependent libraries <exec_prefix>\n");
         strncpy(exec_prefix, EXEC_PREFIX, MAXPATHLEN);
-        joinpath(exec_prefix, "lib/lib-dynload");
+        joinpath(exec_prefix, "lib64/lib-dynload");
     }
     /* If we found EXEC_PREFIX do *not* reduce it!  (Yet.) */

@@ -645,7 +645,7 @@ calculate_path(void)
     }

     /* Reduce prefix and exec_prefix to their essence,
-     * e.g. /usr/local/lib/python1.5 is reduced to /usr/local.
+     * e.g. /usr/local/lib64/python1.5 is reduced to /usr/local.
      * If we're loading relative to the build directory,
      * return the compiled-in defaults instead.
      */
diff --git i/setup.py w/setup.py
index 40ad843..4650b82 100644
--- i/setup.py
+++ w/setup.py
@@ -438,7 +438,7 @@ class PyBuildExt(build_ext):
     def detect_modules(self):
         # Ensure that /usr/local is always used
         if not cross_compiling:
-            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib64')
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         if cross_compiling:
             self.add_gcc_paths()
@@ -758,11 +758,11 @@ class PyBuildExt(build_ext):
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/lib64/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/lib64/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
@@ -797,8 +797,8 @@ class PyBuildExt(build_ext):
             if krb5_h:
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
+                                     ['/usr/local/ssl/lib64',
+                                      '/usr/contrib/ssl/lib64/'
                                      ] )

         if (ssl_incs is not None and
